; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -load-pass-plugin=./build/libFunctionInlining.so -passes=function-inlining -S | FileCheck %s

; Check if the phi after split is remapped correctly.

define i32 @caller(i32 %a, i32 %b) {
; CHECK-LABEL: @caller(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[ADD:%.*]] = add i32 [[A:%.*]], [[B:%.*]]
; CHECK-NEXT:    br label [[TMP1:%.*]]
; CHECK:       callee.exit:
; CHECK-NEXT:    [[TMP0:%.*]] = sub i32 [[TMP2:%.*]], 10
; CHECK-NEXT:    br label [[AFTER_ENTRY:%.*]]
; CHECK:       after_entry:
; CHECK-NEXT:    [[X:%.*]] = phi i32 [ [[ADD]], [[CALLEE_EXIT:%.*]] ]
; CHECK-NEXT:    ret i32 [[X]]
; CHECK:       1:
; CHECK-NEXT:    [[TMP2]] = sub i32 [[ADD]], 5
; CHECK-NEXT:    br label [[CALLEE_EXIT]]
;
entry:
  %add = add i32 %a, %b
  %call2 = call i32 @callee(i32 %add)
  br label %after_entry

after_entry:
  %x = phi i32 [ %add, %entry ]
  ret i32 %x
}

define i32 @callee(i32 %x) {
  %sub = sub i32 %x, 5
  br label %exit

exit:
  %sub2 = sub i32 %sub, 10
  ret i32 %sub2
}
